"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/use-chat.tsx":
/*!****************************!*\
  !*** ./hooks/use-chat.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChat: function() { return /* binding */ useChat; }\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n/* __next_internal_client_entry_do_not_use__ useChat auto */ \n\n\n// Call real AI API instead of simulating\nconst getAiResponse = async (sessionId, prompt)=>{\n    var _data_choices__message, _data_choices_, _data_choices;\n    console.log(\"Calling AI API for prompt:\", prompt, \"sessionId:\", sessionId);\n    const response = await fetch(\"https://go-ai-agent-muhamash4111-ukwf1enb.leapcell.dev/ai-agent\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            session_id: sessionId,\n            prompt,\n            stream: false\n        })\n    });\n    if (!response.ok) {\n        throw new Error(\"API error: \".concat(response.statusText));\n    }\n    const data = await response.json();\n    console.log(\"AI API response:\", data);\n    // Extract assistant content from the API response structure\n    const aiMessage = ((_data_choices = data.choices) === null || _data_choices === void 0 ? void 0 : (_data_choices_ = _data_choices[0]) === null || _data_choices_ === void 0 ? void 0 : (_data_choices__message = _data_choices_.message) === null || _data_choices__message === void 0 ? void 0 : _data_choices__message.content) || \"Sorry, no response from AI at the moment.\";\n    return aiMessage;\n};\nconst useChat = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((set, get)=>({\n        chatHistory: [],\n        currentChatId: null,\n        isAiThinking: false,\n        currentChat: null,\n        startNewChat: ()=>{\n            const newChatId = (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n            const newChat = {\n                id: newChatId,\n                messages: [],\n                timestamp: Date.now()\n            };\n            set((state)=>({\n                    chatHistory: [\n                        newChat,\n                        ...state.chatHistory\n                    ],\n                    currentChatId: newChatId,\n                    currentChat: newChat\n                }));\n            return newChatId;\n        },\n        sendPrompt: async (content)=>{\n            let chatId = get().currentChatId;\n            // If no current chat, create a new one\n            if (!chatId) {\n                chatId = get().startNewChat();\n            }\n            // Create user message\n            const userMessage = {\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n                content,\n                role: \"user\",\n                timestamp: Date.now()\n            };\n            // Update state with user message\n            set((state)=>{\n                const updatedChatHistory = state.chatHistory.map((chat)=>{\n                    if (chat.id === chatId) {\n                        return {\n                            ...chat,\n                            messages: [\n                                ...chat.messages,\n                                userMessage\n                            ],\n                            timestamp: Date.now()\n                        };\n                    }\n                    return chat;\n                });\n                const currentChat = updatedChatHistory.find((chat)=>chat.id === chatId) || null;\n                return {\n                    chatHistory: updatedChatHistory,\n                    currentChat,\n                    isAiThinking: true\n                };\n            });\n            try {\n                // Get AI response from real API using currentChatId as session_id\n                const aiResponseContent = await getAiResponse(chatId, content);\n                // Create AI message\n                const aiMessage = {\n                    id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n                    content: aiResponseContent,\n                    role: \"assistant\",\n                    timestamp: Date.now()\n                };\n                // Update state with AI message\n                set((state)=>{\n                    const updatedChatHistory = state.chatHistory.map((chat)=>{\n                        if (chat.id === chatId) {\n                            return {\n                                ...chat,\n                                messages: [\n                                    ...chat.messages,\n                                    aiMessage\n                                ],\n                                timestamp: Date.now()\n                            };\n                        }\n                        return chat;\n                    });\n                    const currentChat = updatedChatHistory.find((chat)=>chat.id === chatId) || null;\n                    return {\n                        chatHistory: updatedChatHistory,\n                        currentChat,\n                        isAiThinking: false\n                    };\n                });\n            } catch (error) {\n                console.error(\"Error getting AI response:\", error);\n                set({\n                    isAiThinking: false\n                });\n            }\n        },\n        selectChat: (chatId)=>{\n            const selectedChat = get().chatHistory.find((chat)=>chat.id === chatId) || null;\n            set({\n                currentChatId: chatId,\n                currentChat: selectedChat\n            });\n        },\n        deleteChat: (chatId)=>{\n            set((state)=>{\n                const updatedChatHistory = state.chatHistory.filter((chat)=>chat.id !== chatId);\n                // If deleting the current chat, update currentChatId\n                const updatedCurrentChatId = state.currentChatId === chatId ? updatedChatHistory.length > 0 ? updatedChatHistory[0].id : null : state.currentChatId;\n                const updatedCurrentChat = updatedCurrentChatId ? updatedChatHistory.find((chat)=>chat.id === updatedCurrentChatId) || null : null;\n                return {\n                    chatHistory: updatedChatHistory,\n                    currentChatId: updatedCurrentChatId,\n                    currentChat: updatedCurrentChat\n                };\n            });\n        }\n    }), {\n    name: \"ai-assistant-chat\"\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-chat.tsx\n"));

/***/ })

});